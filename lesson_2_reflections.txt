What happens when you initialize a repository? Why do you need to do it?
It will now show up on Git. The user will now be capable of executing Git commands and use Git features on/with the repository.
How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is the transition area where you choose which files are to be committed from the working directory and once committed they will show up in the repository as a commit. It offers the ability to go back and change, add, or remove files to commit before committing.
How can you use the staging area to make sure you have one commit per logical change?
You can use git status to see what has been added to the staging area.
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to experiment. Branches would allow you make multiple changes for a variety of reasons and maitain the source code.
How do the diagrams help you visualize the branch structure?
You can see different "timelines" originating from the master and you can see which commits will be listed under the branch that is currently checked out.
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
You merge all of the commits within the branch. To indicate that they separated before.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pros: Saves time, one less thing to do
Cons: May introduce bugs, miss conflicts